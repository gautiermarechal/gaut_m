{"version":3,"sources":["components/TopPart.js","components/TopBar.js","components/ProjectCard.js","components/Projects.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","title","breakpoints","up","margin","spacing","paragraph","down","paddingTop","TopPart","classes","Container","maxWidth","className","Typography","variant","backgroundColor","boxShadow","color","leftElements","marginTop","marginRight","rightElements","overflow","fontSize","TopBar","AppBar","position","href","IconButton","style","content","padding","projectTitle","paddingBottom","cardContent","divider","marginBottom","progressBar","backGroundColor","Projects","useState","name","description","status","projects","progress","link","Fragment","map","data","Grid","item","xs","md","Paper","align","Divider","LinearProgress","value","props","container","appRoot","height","header","minHeight","createMuiTheme","typography","fontFamily","join","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.479a955d.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles( theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        [theme.breakpoints.up('md')]: {\n            margin: theme.spacing(10),\n        }\n    },\n    paragraph: {\n        [theme.breakpoints.up('md')]: {\n            margin: theme.spacing(10),\n        },\n        [theme.breakpoints.down('sm')]: {\n            paddingTop: theme.spacing(2),\n        },\n        lineHeight: '1.7',\n    }\n}));\n\nexport default function TopPart() {\n    const classes = useStyles();\n    return(\n    <Container maxWidth=\"md\" className={classes.root}>\n        <Typography variant=\"h3\" className={classes.title}>Bonjour, Hi!</Typography>\n        <Typography variant=\"body1\" className={classes.paragraph}>My name is Gautier, I am a last year college student at Concordia University. I study Business Technology Management and Computer Science as a minor. <br/> I am passionate about creating and building all kind of stuff, especially tech related. I am willing to learn every day. What I strive for the most right now is web development. <br/> I am currently learning React online and by working on my own projects. I am also using Angular in my part-time internhsip within a startup. <br/> For front-end design, I use Material-UI, Bootstrap and Ion. <br/> In terms of deployment and backend, I learn a lot about AWS, git and Node.js to build lambda functions.\n        <br/>This website is dedicated to show my current projects, and help me monitor my progression, to keep the momentum! \n        <br/>Feel free to check out my project below!\n        <br/>My contacts are in the top left and right!\n        <br/>See you!</Typography>\n    </Container>\n    );\n}","import React from 'react';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: 'inherit',\n        boxShadow: 'none',\n        color: 'white',\n        flexGrow: 1,\n    },\n    leftElements: {\n        marginTop: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        flexGrow: 1,\n    },\n    rightElements: {\n        marginTop: theme.spacing(2),\n        overflow: 'scroll',\n        [theme.breakpoints.down('xs')]: {\n            fontSize: '50vw',\n        }\n    },\n}));\n\nexport default function TopBar(){\n    const classes = useStyles();\n    return(\n    <AppBar className={classes.root} position=\"sticky\">\n        <ToolBar>\n            <div className={classes.leftElements}>\n                <a href=\"https://github.com/gautiermarechal\"><IconButton style={{ color: '#fafafa' }}><GitHubIcon></GitHubIcon></IconButton></a>\n                <a href=\"https://www.linkedin.com/in/gautiermarechal/\"><IconButton style={{ color: '#fafafa' }}><LinkedInIcon></LinkedInIcon></IconButton></a>\n            </div>\n            <div className={classes.rightElements}>\n                <Typography variant=\"body1\">gaut[dot]marechal@gmail[dot]com</Typography>\n                <Typography variant=\"body1\">514-576-9414</Typography>\n            </div>\n        </ToolBar>\n    </AppBar>\n    );\n};","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Divider from '@material-ui/core/Divider';\n\n\n\nconst useStyles = makeStyles( theme => ({\n    root: {\n        margin: theme.spacing(4),\n        boxShadow: 'none',\n        backgroundColor: '#E8E8E8',\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing(0),\n        }\n    },\n    content: {\n        padding: theme.spacing(4),\n    },\n    projectTitle: {\n        paddingBottom: theme.spacing(3),\n        [theme.breakpoints.down('xs')]: {\n            fontSize: '5vw',\n        }\n    },\n    cardContent: {\n        paddingBottom: theme.spacing(3),\n         overflow: 'hidden',\n    },\n    divider: {\n        marginBottom: theme.spacing(4),\n        overflow: 'hidden',\n    },\n    progressBar: {\n        backGroundColor: 'green',\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(4),\n        paddingBottom: theme.spacing(0),\n    },\n}));\n\nexport default function Projects() {\n    const classes = useStyles();\n    const [name, setName] = useState([\n        'Mathieu Portfolio',\n        'Planet.io',\n        'Electric Longboard',\n        'Bike Security System',\n        'University Books Marketplace'\n    ]);\n    const [description, setDescription] = useState([\n        'This website is intended to present Mathieu Tranchida\\' s work in photography and video production. All is created with React and Material UI front-end library. The only backend present is a database to store photos and handling of HTTP methods to receive emails and send emails to user when the form is submitted. ',\n        'This website is a project intended to centralize and structure data on environmental problems. My goal was to filter fake news and biased information, to gather in form a neutral and rational set of data to present. All this information is retrieved via articles, reports and research papers posted and approved by the community. Future goal is to make this an open source platform, where people can exchange with each other potential solutions, putting aside any political or useless form of bias.',\n        'Building my own electric skateboard for fun',\n        'Build a security system with a Raspberry Pi and a geo localation chip for my bike in Montreal, where bikes theft is popular.',\n        'Create a platform to sell and buy university books based on specific filters as classes you have, university you are enrolled in, etc...'\n    ]);\n    const [status, setStatus] = useState([\n        '90%, almost deployed',\n        '70% all front-end done, miss API calls',\n        '50% have all components',\n        '5% just an idea',\n        '10% started design of App on Framer'\n    ]);\n    let projects = [\n        {\n            name: name[0],\n            description: description[0],\n            status: status[0],\n            progress: 90,\n            link: 'https://github.com/gautiermarechal/mathieu_portfolio',\n        },\n        {\n            name: name[1],\n            description: description[1],\n            status: status[1],\n            progress: 70,\n            link: 'https://github.com/gautiermarechal/Planet.io',\n        },\n        {\n            name: name[2],\n            description: description[2],\n            status: status[2],\n            progress: 50,\n            link: 'https://www.instructables.com/id/DIY-Electric-Longboard/',\n        },\n        {\n            name: name[3],\n            description: description[3],\n            status: status[3],\n            progress: 5,\n            link: 'soon',\n        },\n        {\n            name: name[4],\n            description: description[4],\n            status: status[4],\n            progress: 10,\n            link: 'soon',\n        },\n\n]\n\n    return(\n        <React.Fragment>\n        {projects.map( data => \n        <Grid item xs={12} md={6}>\n        <Paper className={classes.root}>\n            <div className={classes.content}>\n            <Typography variant=\"h3\" align=\"center\" className={classes.projectTitle}>{data.name}</Typography>\n            <Divider className={classes.divider}/>\n            <Typography variant=\"body1\" className={classes.cardContent}><Typography variant=\"h5\">Description:</Typography>{data.description}</Typography>\n            <Typography variant=\"body1\" className={classes.cardContent}><Typography variant=\"h5\">Status:</Typography> {data.status}</Typography>\n            <Typography variant=\"h5\">Progression:</Typography>\n            <LinearProgress variant=\"determinate\" value={data.progress} className={classes.progressBar}/>\n            <Typography variant=\"body1\" className={classes.cardContent}><Typography variant=\"h5\">Link: </Typography><a href={data.link}>{data.link}</a></Typography>\n            </div>\n        </Paper>\n        </Grid>)}\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport ProjectCard from './ProjectCard';\n\n\nconst useStyles = makeStyles( theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        [theme.breakpoints.up('md')]: {\n            margin: theme.spacing(5),\n        },\n        margin: theme.spacing(2),\n    },\n}));\n\nexport default function Projects(props) {\n    const classes = useStyles();\n    return(\n        <Container maxWidth=\"md\" className={classes.root}>\n            <Typography variant=\"h3\" className={classes.title}>Current Projects</Typography>\n            <Grid container spacing={2}>\n                <ProjectCard/>\n            </Grid>\n        </Container>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport TopPart from './components/TopPart';\nimport './App.css';\nimport TopBar from './components/TopBar';\nimport Projects from './components/Projects';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n    appRoot: {\n      backgroundColor: '#008080',\n      height: '100%',\n      color: 'white'\n    },\n    header: {\n      minHeight: '100vh',\n      paddingTop: '300px',\n      color: 'white',\n      },\n}));\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'Montserrat',\n      'sans-serif'\n    ].join(','),\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n    <div className={classes.appRoot}>\n      <TopBar />\n      <TopPart/>\n      <Projects/>\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}